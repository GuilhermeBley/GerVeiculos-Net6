@using ClienteNet6.Shared.Dto;

<div class="app-container ">
    <div class="col-md-6 offset-md-3 mt-5">
        <div class="card">
            <h3 class="card-header">Registro</h3>
            <div class="card-body">
                <EditForm Model="LoginCreateDto" OnValidSubmit="@(()=>OnValid.InvokeAsync(LoginCreateDto))">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="nomeEmpresa">Nome da empresa</label>
                        <InputText id="nomeEmpresa" @bind-Value=@LoginCreateDto.NomeEmpresa class="form-control" />
                        <ValidationMessage For="@(()=>LoginCreateDto.NomeEmpresa)" />
                    </div>
                    <div class="form-group">
                        <label for="email">E-mail</label>
                        <InputText id="email" @bind-Value=@LoginCreateDto.Email class="form-control" />
                        <ValidationMessage For="@(()=>LoginCreateDto.Email)" />
                    </div>
                    <div class="form-group">
                        <label for="password">Senha</label>
                        <InputText id="password" @bind-Value=@LoginCreateDto.Password type="password" class="form-control" />
                        <ValidationMessage For="@(()=>LoginCreateDto.Password)" />
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">Confirmar Senha</label>
                        <InputText id="confirmPassword" @bind-Value=@LoginCreateDto.ConfirmPassword type="password" class="form-control" />
                        <ValidationMessage For="@(()=>LoginCreateDto.ConfirmPassword)" />
                    </div>
                    <div class="my-5 flex-row-reverse">
                        <button type="submit" class="btn btn-primary">
                            Registrar
                        </button>
                        <a @onclick=@OnCloseSubmit class="btn btn-link">Cancelar</a>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public EventCallback<LoginCreate> OnValid { get; set; }

    private LoginCreate LoginCreateDto = new();

    private void OnCloseSubmit()
    {
        OnClose.InvokeAsync();
    }
}
