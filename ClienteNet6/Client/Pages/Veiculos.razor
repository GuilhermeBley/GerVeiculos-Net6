@page "/veiculos"
@using ClienteNet6.Client.Components
@using ClienteNet6.Shared.Dto

@inject HttpClient Client;

<ErrorComponent Errors="ErrorList"></ErrorComponent>

<h3 class="m-3">Veiculos</h3>

<div class="my-xxl-4">
    <button type="button" class="btn btn-primary" onclick="@(()=> IsAddRenavam=true; )">Adicionar novo veículo</button>
</div>

@*Veiculos show*@
@if (VeiculoDtos.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Renavam</th>
                <th scope="col">Chassi</th>
                <th scope="col">Placa</th>
                <th scope="col">Cor</th>
                <th scope="col">Modelo</th>
                <th scope="col"></th>
                <th scope="col"></th>
            </tr>
        </thead>
        @foreach (var veiculoDto in VeiculoDtos)
        {
            <tbody>
                <tr>
                    <td>@veiculoDto.Renavam</td>
                    <td>@veiculoDto.Chassi</td>
                    <td>@veiculoDto.Placa</td>
                    <td>@veiculoDto.Cor</td>
                    <td>@veiculoDto.Modelo</td>
                    <td>
                        <button type="button" class="btn btn-outline-secondary" title="Editar" onclick="@(()=> EditRenavam = veiculoDto.Renavam)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" fill="currentColor" height="16" class="bi bi-pencil" viewBox="0 0 16 16">
                                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                            </svg>
                        </button>
                    </td>
                    <td>
                        <button type="button" class="btn btn-outline-danger" title="Excluir" onclick="@(()=> RemoveRenavam = veiculoDto.Renavam)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" fill="currentColor" height="16" class="bi bi-x-square" viewBox="0 0 16 16">
                                <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
                                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                            </svg>
                        </button>
                    </td>
                </tr>
            </tbody>
        }
    </table>
}

@*Veiculos add*@
<Modal ModalTitle="Adicionar veículo" Show="@IsAddRenavam" OnClose="@OnCloseAddRenavam">
    <h4>Adicionar</h4>
</Modal>



@*Veiculos Edit*@
<Modal ModalTitle="Editar veículo" Show="@IsEditRenavam" OnClose="@OnCloseEditRenavam">
    <h4>Editar</h4>
</Modal>


@*Veiculos Remove*@
<Modal ModalTitle="Remover veículo" Show="@IsRemoveRenavam" OnClose="@OnCloseRemoveRenavam">
    <h4>Remover</h4>
</Modal>


@code {
    private List<string> ErrorList { get; } = new List<string>();
    private IEnumerable<VeiculoDto> VeiculoDtos { get; set; } = new List<VeiculoDto>();

    // Edit
    private int? EditRenavam { get; set; } = null;
    private bool IsEditRenavam => EditRenavam is not null;

    // Remove
    private int? RemoveRenavam { get; set; } = null;
    private bool IsRemoveRenavam => RemoveRenavam is not null;

    // Add
    private bool IsAddRenavam { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var response = await Client.GetAsync("api/veiculo/all");

        // Errors
        if (!response.IsSuccessStatusCode)
        {
            if (response.StatusCode.Equals(HttpStatusCode.BadRequest))
            {
                var message = await response.Content.ReadFromJsonAsync<string>();

                ErrorList.Add(message ?? "Falha ao coletar veículos.");
                return;
            }

            ErrorList.Add("Falha ao coletar veículos");
            return;
        }

        // Veiculos
        if (response.StatusCode.Equals(HttpStatusCode.OK))
            VeiculoDtos = await response.Content.ReadFromJsonAsync<IEnumerable<VeiculoDto>>() ?? new List<VeiculoDto>();
    }

    private void OnCloseEditRenavam()
    {
        EditRenavam = null;
    }

    private void OnCloseRemoveRenavam()
    {
        RemoveRenavam = null;
    }

    private void OnCloseAddRenavam()
    {
        IsAddRenavam = false;
    }
}
